{
  "mcpServers": {
    // "ddg": {
    //   "command": "docker",
    //   "args": ["run", "-i", "--rm", "mcp/ddg"]
    // },
    "google": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "mcp/google"
      ]
    },
    "fetcher": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "mcp/fetcher"
      ]
    },
    "puppeteer": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e",
        "DOCKER_CONTAINER=true",
        "mcp/puppeteer"
      ]
    },
    "searxng": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "-e", "SEARXNG_URL", "mcp/searxng"],
      "env": {
        "SEARXNG_URL": "http://host.docker.internal:48080/"
      }
    },
    // "docker": {
    //   "command": "docker",
    //   "args": [
    //     "run",
    //     "-i",
    //     "--rm",
    //     "-v",
    //     "/var/run/docker.sock:/var/run/docker.sock:ro",
    //     "mcp/docker"
    //   ]
    // },
    "gptr": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "OPENAI_API_BASE",
        "-e",
        "OPENAI_API_KEY",
        "-e",
        "RETRIEVER",
        "-e",
        "SEARX_URL",
        "-e",
        "RETRIEVER_ENDPOINT",
        "-e",
        "EMBEDDING",
        "-e",
        "FAST_LLM",
        "-e",
        "SMART_LLM",
        "-e",
        "STRATEGIC_LLM",
        "-e",
        "CURATE_SOURCES",
        "-e",
        "REPORT_FORMAT",
        "-e",
        "DOC_PATH",
        "-e",
        "SCRAPER",
        "mcp/gptr"
      ],
      "env": {
        "OPENAI_API_BASE": "${AI_BASE_URL}",
        "OPENAI_API_KEY": "${AI_API_KEY}",
        // "RETRIEVER": "duckduckgo",
        // "SCRAPER": "bs",
        "RETRIEVER": "searx",
        "SCRAPER": "browser",
        "EMBEDDING": "openai:text-embedding-3-small",
        "FAST_LLM": "openai:gpt-4o-mini",
        "SMART_LLM": "openai:gpt-4o",
        "STRATEGIC_LLM": "openai:o1-preview",
        "CURATE_SOURCES": true,
        "REPORT_FORMAT": "IEEE",
        "DOC_PATH": ""
      }
    },
    "fetch": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "mcp/fetch"]
    },
    // "filesystem": {
    //   "command": "docker",
    //   "args": [
    //     "run",
    //     "-i",
    //     "--rm",
    //     "--mount", "type=bind,src=/tmp/,dst=/workspace,ro",
    //     "mcp/filesystem",
    //     "/workspace"
    //   ]
    // },
    // "git": {
    //   "command": "docker",
    //   "args": [
    //     "run",
    //     "--rm",
    //     "-i",
    //     "--mount", "type=bind,src=/tmp/,dst=/projects,ro",
    //     "mcp/git"
    //   ]
    // },
    // "github": {
    //   "command": "docker",
    //   "args": [
    //     "run",
    //     "-i",
    //     "--rm",
    //     "-e",
    //     "GITHUB_PERSONAL_ACCESS_TOKEN",
    //     "mcp/github"
    //   ],
    //   "env": {
    //     "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
    //   }
    // },
    // "google-maps": {
    //   "command": "docker",
    //   "args": [
    //     "run",
    //     "-i",
    //     "--rm",
    //     "-e",
    //     "GOOGLE_MAPS_API_KEY",
    //     "mcp/google-maps"
    //   ],
    //   "env": {
    //     "GOOGLE_MAPS_API_KEY": "<YOUR_API_KEY>"
    //   }
    // },
    // "postgres": {
    //   "command": "docker",
    //   "args": [
    //     "run",
    //     "-i",
    //     "--rm",
    //     "mcp/postgres",
    //     "postgresql://${AI_SQL_DB_USERNAME}:${AI_SQL_DB_PASSWORD}@host.docker.internal:5432/${AI_SQL_DB_NAME:-postgres}"]
    // },
    // "memory": {
    //   "command": "docker",
    //   "args": ["run", "-i", "-v", "claude-memory:/app/dist", "--rm", "mcp/memory"]
    // },
    // "redis": {
    //   "command": "docker",
    //   "args": [
    //     "run",
    //     "-i",
    //     "--rm",
    //     "mcp/redis",
    //     "redis://host.docker.internal:6379"]
    // },
    "time": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "mcp/time"]
    }
  }
}
