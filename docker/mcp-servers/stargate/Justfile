#!/usr/bin/env -S just --justfile

set shell := ["bash", "-c"]

AI_MCP_PORT := "58080"
# AI_MCP_PORT := env_var('AI_MCP_PORT', '5082')


default:
    @just --list

tidy:
	go mod tidy
	go fmt ./...
	go vet ./...

build: tidy
	@mkdir -p bin
	go build -o bin/stargate ./main.go

run:
	go run main.go serve --port {{AI_MCP_PORT}}

# Update all dependencies
update:
    go get -u ./...


# docker build
docker-build:
	# docker build -t mcp/stargate .
	docker compose build

# docker dev
docker-dev:
	# docker run -v /var/run/docker.sock:/var/run/docker.sock --rm -it mcp/stargate bash
	AI_MCP_PORT={{AI_MCP_PORT}}  docker compose run --rm stargate bash

# docker-serve:
# 	# docker run -v /var/run/docker.sock:/var/run/docker.sock -p 58080:58080 --rm -it mcp/stargate /stargate
# 	AI_MCP_PORT={{AI_MCP_PORT}} docker compose up -d

# start the MCP servers - stargate
docker-up:
	AI_MCP_PORT={{AI_MCP_PORT}} docker compose up -d

# stop the MCP servers - stargate
docker-down:
    docker compose down

# Build and start Stargate and all MCP servers
start: docker-build docker-down docker-up
	@echo "MCP servers started"


stop: docker-down
	@echo "MCP servers stopped"

test: unit integration

unit:
	@echo "Running unit tests..."
	go test -s ./... -v
	@echo "Unit tests completed"

integration:
	@echo "Running integration tests..."
	@AI_MCP_PORT={{AI_MCP_PORT}} go test ./... -v -tags=integration -short=false -count=1
	@echo "Integration tests completed"

generate:
    go generate ./...
